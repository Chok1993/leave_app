import streamlit as st
import pandas as pd
import datetime as dt
import altair as alt
import tempfile
from fpdf import FPDF
import matplotlib.pyplot as plt
from io import BytesIO

# ===== ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• =====
FILE_SCAN = "scan_report.xlsx"
FILE_REPORT = "leave_report.xlsx"

# ===== ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå =====
try:
    df_scan = pd.read_excel(FILE_SCAN)
except:
    df_scan = pd.DataFrame()

try:
    df_report = pd.read_excel(FILE_REPORT)
except:
    df_report = pd.DataFrame()

# ===== ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô =====
staff_groups = [
    "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏≤‡∏î‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ‡∏†‡∏≤‡∏ß‡∏∞‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏™‡∏∏‡∏Ç", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£",
    "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏≥‡πÇ‡∏î‡∏¢‡πÅ‡∏°‡∏•‡∏á‡∏ó‡∏µ‡πà 9.1 ‡∏à.‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏≥‡πÇ‡∏î‡∏¢‡πÅ‡∏°‡∏•‡∏á‡∏ó‡∏µ‡πà 9.2 ‡∏à.‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå",
    "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏≥‡πÇ‡∏î‡∏¢‡πÅ‡∏°‡∏•‡∏á‡∏ó‡∏µ‡πà 9.3 ‡∏à.‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏≥‡πÇ‡∏î‡∏¢‡πÅ‡∏°‡∏•‡∏á‡∏ó‡∏µ‡πà 9.4 ‡∏õ‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á",
    "‡∏î‡πà‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏û‡∏£‡∏°‡πÅ‡∏î‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏≠‡∏° ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠", "‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏Ç‡∏ï‡πÄ‡∏°‡∏∑‡∏≠‡∏á",
    "‡∏á‡∏≤‡∏ô‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ",
    "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏†‡∏±‡∏¢‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏£‡∏Ñ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°",
    "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏ä‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", "‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°‡∏ô‡∏±‡∏Å‡∏£‡∏∞‡∏ö‡∏≤‡∏î‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏†‡∏≤‡∏Ñ‡∏™‡∏ô‡∏≤‡∏°", "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏à‡∏±‡∏¢"
]

# ===== ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å =====
st.title("üìã ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏™‡∏Ñ‡∏£.9)")
main_menu = st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π", ["üìä Dashboard ‡∏£‡∏ß‡∏°", "üß≠ ‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£", "üïí ‡∏Å‡∏≤‡∏£‡∏•‡∏≤", "üõ†Ô∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (Admin)"])

# ===== Dashboard ‡∏£‡∏ß‡∏° =====
if main_menu == "üìä Dashboard ‡∏£‡∏ß‡∏°":
    st.header("üìà Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")

    total_travel = len(df_scan)
    total_leave = len(df_report)
    total_travel_days = df_scan["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô"].sum() if "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô" in df_scan.columns else 0
    total_leave_days = df_report["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"].sum() if "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤" in df_report.columns else 0

    col1, col2 = st.columns(2)
    col1.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£", f"{total_travel} ‡∏Ñ‡∏ô")
    col1.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°", f"{total_travel_days} ‡∏ß‡∏±‡∏ô")
    col2.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏•‡∏≤", f"{total_leave} ‡∏Ñ‡∏ô")
    col2.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤‡∏£‡∏ß‡∏°", f"{total_leave_days} ‡∏ß‡∏±‡∏ô")

    if not df_report.empty:
        st.markdown("### üßæ Key Metrics ‡∏Å‡∏≤‡∏£‡∏•‡∏≤")
        unique_persons = df_report["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"].nunique()
        avg_leave = round(df_report["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"].mean(), 2)
        c1, c2 = st.columns(2)
        c1.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏ó‡∏µ‡πà‡∏•‡∏≤", f"{unique_persons} ‡∏Ñ‡∏ô")
        c2.metric("‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ß‡∏±‡∏ô‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô", f"{avg_leave} ‡∏ß‡∏±‡∏ô")

        st.markdown("### üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")
        leave_by_type = df_report.groupby("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤")["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"].sum().reset_index()
        st.altair_chart(alt.Chart(leave_by_type).mark_bar().encode(x="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤", y="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤", color="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤"), use_container_width=True)

        st.markdown("### üè¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô")
        leave_by_group = df_report.groupby("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô")["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"].sum().reset_index()
        st.altair_chart(alt.Chart(leave_by_group).mark_bar().encode(x="‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô", y="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤", color="‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"), use_container_width=True)
        st.dataframe(df_report.astype(str), use_container_width=True)

# ===== ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ =====
elif main_menu == "üß≠ ‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£":
    st.header("üßæ ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£")
    with st.form("scan_form"):
        data = {}
        data["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"] = st.text_input("üë§ ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•")
        data["‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"] = st.selectbox("üè¢ ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô", staff_groups)
        data["‡∏õ‡∏µ ‡∏û.‡∏®."] = st.number_input("üìÖ ‡∏õ‡∏µ ‡∏û.‡∏®.", min_value=2560, max_value=2600, value=2568)
        data["‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"] = st.text_input("üè¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°)")
        data["‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà"] = st.text_input("üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà")
        data["‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î"] = st.text_input("üë• ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î")
        data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°"] = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°", dt.date.today())
        data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"] = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", dt.date.today())
        data["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô"] = (data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"] - data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°"]).days + 1
        st.write(f"üìÜ ‡∏£‡∏ß‡∏° {data['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô']} ‡∏ß‡∏±‡∏ô")

        st.markdown("### üë®‚Äçüë©‚Äçüëß‚Äçüë¶ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á (‡∏´‡∏≤‡∏Å‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏ì‡∏∞)")
        num_people = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á", min_value=0, max_value=20, step=1)
        companions = []
        for i in range(int(num_people)):
            name = st.text_input(f"‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà {i+1}")
            group = st.selectbox(f"‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà {i+1}", staff_groups, key=f"group_{i}")
            if name:
                companions.append({"‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•": name, "‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô": group})
        data["‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á"] = ", ".join([p["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"] for p in companions])
        data["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"] = st.text_area("üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏")

        submitted = st.form_submit_button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

    if submitted:
        if not data["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"]:
            st.error("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£")
        else:
            # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            all_rows = [data.copy()]
            for c in companions:
                d = data.copy()
                d["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"] = c["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"]
                d["‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"] = c["‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"]
                d["‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á"] = ""
                all_rows.append(d)

            df_scan = pd.concat([df_scan, pd.DataFrame(all_rows)], ignore_index=True)
            df_scan.to_excel(FILE_SCAN, index=False)
            st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ (‡∏£‡∏ß‡∏°‡∏ú‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß)")

    if not df_scan.empty:
        st.markdown("## üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£")
        st.write(f"üìã ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(df_scan)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏£‡∏ß‡∏° {df_scan['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô'].sum()} ‡∏ß‡∏±‡∏ô")
        st.dataframe(df_scan.astype(str), use_container_width=True)

# ===== ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏≤ =====
elif main_menu == "üïí ‡∏Å‡∏≤‡∏£‡∏•‡∏≤":
    st.header("üìù ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏≤")
    with st.form("leave_form"):
        data = {}
        data["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"] = st.text_input("üë§ ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•")
        data["‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"] = st.selectbox("üè¢ ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô", staff_groups)
        data["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤"] = st.selectbox("üìå ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤", ["‡∏•‡∏≤‡∏õ‡πà‡∏ß‡∏¢", "‡∏•‡∏≤‡∏Å‡∏¥‡∏à", "‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"])
        data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°"] = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°", dt.date.today())
        data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"] = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", dt.date.today())
        data["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"] = (data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î"] - data["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°"]).days + 1
        st.write(f"üóìÔ∏è ‡∏£‡∏ß‡∏°‡∏•‡∏≤ {data['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤']} ‡∏ß‡∏±‡∏ô")
        data["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"] = st.text_area("üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏")

        submitted = st.form_submit_button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

    if submitted:
        df_report = pd.concat([df_report, pd.DataFrame([data])], ignore_index=True)
        df_report.to_excel(FILE_REPORT, index=False)
        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

    if not df_report.empty:
        st.markdown("## üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤")
        st.dataframe(df_report.astype(str), use_container_width=True)

# ===== ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö ===== 
elif main_menu == "üõ†Ô∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (Admin)":
    st.header("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•")
    ADMIN_PASSWORD = "admin999"

    password = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
    if password == ADMIN_PASSWORD:
        st.success("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        tab1, tab2, tab3 = st.tabs(["üß≠ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£", "üïí ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤", "üìà Dashboard ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô"])

        # --- ‡πÅ‡∏ó‡πá‡∏ö 1 : ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ ---
        with tab1:
            if not df_scan.empty:
                st.dataframe(df_scan.astype(str), use_container_width=True)
                idx = st.number_input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß (0 ‡∏ñ‡∏∂‡∏á ...)", 0, len(df_scan)-1)
                action = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", ["-", "üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", "üóëÔ∏è ‡∏•‡∏ö"])
                if action == "üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç":
                    edit_data = {}
                    for col in df_scan.columns:
                        edit_data[col] = st.text_input(col, str(df_scan.loc[idx, col]))
                    if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
                        for col in df_scan.columns:
                            df_scan.loc[idx, col] = edit_data[col]
                        df_scan.to_excel(FILE_SCAN, index=False)
                        st.success("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                elif action == "üóëÔ∏è ‡∏•‡∏ö":
                    if st.button("‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö"):
                        df_scan = df_scan.drop(index=idx).reset_index(drop=True)
                        df_scan.to_excel(FILE_SCAN, index=False)
                        st.success("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        # --- ‡πÅ‡∏ó‡πá‡∏ö 2 : ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏≤ ---
        with tab2:
            if not df_report.empty:
                st.dataframe(df_report.astype(str), use_container_width=True)
                idx = st.number_input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß‡∏Å‡∏≤‡∏£‡∏•‡∏≤", 0, len(df_report)-1, key="leave_idx")
                action = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", ["-", "üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", "üóëÔ∏è ‡∏•‡∏ö"], key="leave_action")
                if action == "üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç":
                    edit_data = {}
                    for col in df_report.columns:
                        edit_data[col] = st.text_input(col, str(df_report.loc[idx, col]), key=f"edit_{col}")
                    if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", key="save_leave"):
                        for col in df_report.columns:
                            df_report.loc[idx, col] = edit_data[col]
                        df_report.to_excel(FILE_REPORT, index=False)
                        st.success("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                elif action == "üóëÔ∏è ‡∏•‡∏ö":
                    if st.button("‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö", key="delete_leave"):
                        df_report = df_report.drop(index=idx).reset_index(drop=True)
                        df_report.to_excel(FILE_REPORT, index=False)
                        st.success("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        # --- ‡πÅ‡∏ó‡πá‡∏ö 3 : Dashboard ---
        with tab3:
            st.subheader("üìà Dashboard ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô")
            if not df_scan.empty or not df_report.empty:
                st.bar_chart(df_scan.groupby("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô")["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô"].sum())
                st.bar_chart(df_report.groupby("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô")["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏≤"].sum())
    elif password:
        st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
